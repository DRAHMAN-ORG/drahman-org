---
---


// Main SCSS file for Drahm√°n website

// 1. Variables
// ------------
// Contains all the variables used throughout the stylesheet

// Import variables (uncomment when separating variables into their own file)
// @import "variables";

// Color variables (No changes needed here)
$color-primary: #FF6B6B;
$color-secondary: #4EBCCD;
$color-accent: #FEEB9D;
$color-tertiary: #6C5CE7;
$color-quaternary: #55E6C1;
$color-sky: #1A2980;
$color-background: #F8F9FA;
$color-text: #333333;

// Dark theme colors (No changes needed here)
$color-primary-dark: #FF8E8E;
$color-secondary-dark: #6BE0D5;
$color-accent-dark: #FFE566;
$color-tertiary-dark: #6C5CE7; // Unchanged in dark theme
$color-quaternary-dark: #72FFAC;
$color-background-dark: #222831;
$color-text-dark: #EEEEEE;

// Typography variables
$font-family-primary: 'Poppins', sans-serif;
$font-size-base: 16px;         // Slightly reduce base font size for better mobile scaling
$font-size-h1: 2.5rem;         // Make h1 slightly smaller 
$font-size-h2: 2rem;           // Make h2 slightly smaller
$font-size-h3: 1.5rem;         // Make h3 slightly smaller
$font-size-small: 0.8rem;      // Adjust small font size if needed
$line-height-base: 1.6;

// Spacing variables
$spacing-unit: 8px;            // Reduce base spacing unit for tighter mobile layout
$spacing-small: $spacing-unit * 2;
$spacing-medium: $spacing-unit * 3;
$spacing-large: $spacing-unit * 4; // Slightly reduce large spacing
$spacing-xlarge: $spacing-unit * 6;
$spacing-xxlarge: $spacing-unit * 8;

// Other variables
$border-radius-small: 15px;   
$border-radius: 20px;          // Reduce border-radius for a less rounded look on mobile
$transition-speed: 0.3s;       // Slightly faster transitions for snappier feel
$box-shadow: 0 0.3125em 0.9375em rgba(0, 0, 0, 0.1); // Use em for responsiveness
$box-shadow-dark: 0 0.3125em 0.9375em rgba(255, 255, 255, 0.1); 

// Card variables
$card-max-width: 80%;
$card-single-max-width: 250px;
$card-image-width: 70%;
$card-background-color: rgba(255, 255, 255, 0.05);

// Breakpoint variables (You might want to add more breakpoints for finer control)
$breakpoint-xs: 480px;         // Add an extra small breakpoint
$breakpoint-sm: 576px;
$breakpoint-md: 768px;
$breakpoint-lg: 992px;
$breakpoint-xl: 1200px;


// Define the $breakpoints map
$breakpoints: (
  xs: $breakpoint-xs,
  sm: $breakpoint-sm,
  md: $breakpoint-md,
  lg: $breakpoint-lg,
  xl: $breakpoint-xl
);

// Container width variables (New)
$container-width-sm: 90%;      // Container width on small screens
$container-width-md: 80%;      // Container width on medium screens
$container-width-lg: 70%;      // Container width on large screens
$container-width-xl: var(--breakpoint-xl); // Maintain original container width on extra large screens


// 2. CSS Variables
// ----------------
// Define CSS variables for easy theming and dark mode support

:root {
  // Colors
  --color-primary: #{$color-primary};
  --color-secondary: #{$color-secondary};
  --color-accent: #{$color-accent};
  --color-background: #{$color-background};
  --color-text: #{$color-text};
  --color-sky: #{$color-sky};
  --color-tertiary: #{$color-tertiary};
  --color-quaternary: #{$color-quaternary};

  // Dark theme colors
  --color-primary-dark: #{$color-primary-dark};
  --color-secondary-dark: #{$color-secondary-dark};
  --color-accent-dark: #{$color-accent-dark};
  --color-background-dark: #{$color-background-dark};
  --color-text-dark: #{$color-text-dark};
  --color-tertiary-dark: #{$color-tertiary-dark};
  --color-quaternary-dark: #{$color-quaternary-dark};

  // Typography
  --font-family-primary: #{$font-family-primary};
  --font-size-base: #{$font-size-base};
  --font-size-h1: #{$font-size-h1};
  --font-size-h2: #{$font-size-h2};
  --font-size-h3: #{$font-size-h3};
  --font-size-small: #{$font-size-small};
  --line-height-base: #{$line-height-base};

  // Spacing
  --spacing-unit: #{$spacing-unit};
  --spacing-small: #{$spacing-small};
  --spacing-medium: #{$spacing-medium};
  --spacing-large: #{$spacing-large};
  --spacing-xlarge: #{$spacing-xlarge};
  --spacing-xxlarge: #{$spacing-xxlarge};

  // Other
  --boder-radius-small: #{$border-radius-small};
  --border-radius: #{$border-radius};
  --transition-speed: #{$transition-speed};
  --box-shadow: #{$box-shadow};
  --box-shadow-dark: #{$box-shadow-dark}; 

  // Card
  --card-max-width: #{$card-max-width};
  --card-single-max-width: #{$card-single-max-width};
  --card-image-width: #{$card-image-width};
  --card-background-color: #{$card-background-color};

  // Breakpoints
  --breakpoint-sm: #{$breakpoint-sm};
  --breakpoint-md: #{$breakpoint-md};
  --breakpoint-lg: #{$breakpoint-lg};
  --breakpoint-xl: #{$breakpoint-xl};

 // Container widths (New)
 --container-width-sm: #{$container-width-sm};
 --container-width-md: #{$container-width-md};
 --container-width-lg: #{$container-width-lg};
 --container-width-xl: #{$container-width-xl};
}

// 3. Dark Theme
// -------------
// Styles for dark theme

[data-theme="dark"] {
  --color-primary: #{$color-primary-dark};
  --color-secondary: #{$color-secondary-dark};
  --color-accent: #{$color-accent-dark};
  --color-background: #{$color-background-dark};
  --color-text: #{$color-text-dark};
  --color-tertiary: #{$color-tertiary-dark};
  --color-quaternary: #{$color-quaternary-dark};
}


// 4. Base Styles
// --------------
// Basic styles for HTML elements

@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap');

body {
  font-family: var(--font-family-primary);
  font-size: var(--font-size-base);
  margin: 0;
  padding: 0;
  background-color: var(--color-background);
  color: var(--color-text);
  line-height: var(--line-height-base);
  transition: background-color var(--transition-speed), color var(--transition-speed);
}

h1, h2, h3, h4, h5, h6 {
  margin-top: var(--spacing-large);
  margin-bottom: var(--spacing-medium); // Increased bottom margin for better spacing on mobile
  line-height: 1.5;
}

// No changes needed for h1, h2, h3 as they use responsive variables

a {
  color: var(--color-primary);
  text-decoration: none;
  transition: color var(--transition-speed);

  &:hover,
  &:focus {
    color: var(--color-secondary);
  }
}

img {
  max-width: 100%;
  height: auto;
  object-fit: cover;
}

// Add media queries to adjust heading sizes on smaller screens
@media (max-width: $breakpoint-sm) {
  h1 {
    font-size: 2.5rem; // Adjust as needed
  }

  h2 {
    font-size: 2rem; // Adjust as needed
  }

  h3 {
    font-size: 1.5rem; // Adjust as needed
  }
}

// 5. Layout
// ---------
// Styles for the overall layout structure

.container {
  width: 100%;
  max-width: var(--container-width-xl); // Use responsive container width variable
  margin: 0 auto;
  padding: 0 var(--spacing-large); // Use responsive spacing variable

  @media (max-width: $breakpoint-lg) {
    max-width: var(--container-width-lg);
    padding: 0 var(--spacing-medium); // Reduce padding on smaller screens
  }

  @media (max-width: $breakpoint-md) {
    max-width: var(--container-width-md);
  }

  @media (max-width: $breakpoint-sm) {
    max-width: var(--container-width-sm);
    padding: 0 var(--spacing-small); // Further reduce padding
  }
}

.section {
  width: 100%;
  padding: var(--spacing-xlarge) 0;
  margin-top: var(--spacing-xxlarge);
  margin-bottom: var(--spacing-xxlarge);
  //display: grid; // Use grid for better layout control
  //grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: var(--spacing-medium); // Increase gap for better spacing on mobile

  @media (max-width: $breakpoint-md) {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); // Adjust column size on smaller screens
    gap: var(--spacing-small); 
  }

  &__description {
    text-align: center;
    max-width: 800px;
    margin: 0 auto var(--spacing-medium);
    font-size: var(--font-size-base);
    line-height: 1.6;
    color: var(--color-text);
  }
}

.section__title {
  margin-bottom: var(--spacing-small);
  text-align: center;
}

.section__text {
  margin-bottom: var(--spacing-xlarge);
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;

  @media (max-width: $breakpoint-md) {
    max-width: 100%; // Full width on smaller screens
    padding: 0 var(--spacing-medium); // Add padding for better readability
  }
}


.section-card {
  text-align: center; // Centers the content within the card
  width: 100%; // Makes the card take full width of its container
  max-width: var(--card-max-width); // Limits the card's maximum width for larger screens
  margin: var(--spacing-large) auto; // Adds vertical space between cards and centers horizontally
  transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease; // Smooth transition for hover effects
  padding: var(--spacing-medium); // Adds internal spacing within the card
  border-radius: var(--border-radius); // Rounds the corners of the card
  background-color: var(--card-background-color); // Sets the background color of the card
  display: flex; // Enables flexbox layout
  flex-direction: column; // Stacks child elements vertically
  justify-content: space-between; // Distributes space between flex items
  height: 90%; // Ensures the card takes full height of its grid cell
  
  // Styles for when the card is the only child in its container
  &:only-child {
    max-width: var(--card-single-max-width); // Applies a different max-width for single cards
    justify-self: center; // Centers the card horizontally in the grid
  }

  // Hover effect styles
  &:hover {
    transform: translateY(calc(var(--spacing-medium) * -1)); // Moves the card upwards on hover
    box-shadow: 0 var(--spacing-small) var(--spacing-medium) var(--color-tertiary); // Adds a shadow effect on hover
  }

  // Styles for the image container
  &__image-container {
    aspect-ratio: 1 / 1; // Maintains a square aspect ratio
    margin-bottom: var(--spacing-medium); // Adds space below the image
    position: relative; // Enables absolute positioning of child elements
    overflow: hidden; // Clips any overflowing content
    border-radius: var(--border-radius); // Rounds the corners of the image container
  }

  // Styles for the image
  img {
    top: var(--spacing-small); // Positions the image slightly down from the top
    left: 0; // Aligns the image to the left
    width: var(--card-image-width); // Sets the width of the image
    height: 100%; // Ensures the image takes full height of its container
    object-fit: cover; // Maintains aspect ratio while filling the container
    border-radius: var(--border-radius); // Rounds the corners of the image
  }

  // Styles for the content area
  &__content {
    flex-grow: 1; // Allows content to fill available space
    display: flex; // Enables flexbox layout
    flex-direction: column; // Stacks content vertically
    justify-content: space-between; // Distributes space between content elements
  }

  // Styles for the card title
  &__title {
    font-size: var(--font-size-h3); // Sets the font size for the title
    margin-bottom: var(--spacing-small); // Adds space below the title
  }

  // Styles for the card description
  &__description {
    font-size: var(--font-size-base); // Sets the font size for the description
    margin-bottom: var(--spacing-medium); // Adds space below the description
    line-height: var(--line-height-base); // Sets the line height for readability
  }

  // Styles for buttons within the card
  .button {
    align-self: center; // Centers the button horizontally
    margin-top: auto; // Pushes the button to the bottom of the card
  }
}

// Dark theme specific styles
[data-theme="dark"] .section-card {
  &:hover {
    box-shadow: 0 var(--spacing-small) var(--spacing-medium) var(--color-quaternary-dark); // Adjusts shadow color for dark theme
  }
}

// 6. Header
// ---------
// Styles for the site header

.header {
  padding: var(--spacing-small) 0; 
  position: sticky;
  top: 0;
  z-index: 1000; // Ensure it stays on top of other content
  background-color: transparent; 
  transition: all var(--transition-speed); // Smooth transitions for visual appeal
  position: fixed; // Change from 'sticky' to 'fixed'
  left: 0;
  right: 0;
  max-width: var(--container-width-xl); // Add this line
  margin: 0 auto; // Add this line if it's not already present


  // Gradient background effect
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      to bottom,
      var(--color-tertiary) 0%,
      color-mix(in srgb, var(--color-tertiary) 90%, transparent) 20%,
      color-mix(in srgb, var(--color-sky) 90%, transparent) 100%
    );
    opacity: 1;
    z-index: -1; // Place it behind the main header content
    transition: opacity var(--transition-speed);
    border-bottom: solid 1px var(--color-tertiary);
    border-bottom-left-radius: var(--border-radius);
    border-bottom-right-radius: var(--border-radius);
  }

  &:hover::before {
    opacity: 0.9; // Subtle change on hover
  }

  .container {
    display: flex;
    justify-content: space-between; // Distribute space between branding and nav
    align-items: center;          // Vertically align items in the header
    width: 100%;
    max-width: var(--container-width-xl); // Use responsive container width variable
    margin: 0 auto;
    padding: 0 var(--spacing-large);
    max-width: var(--container-width-xl); // Use your container width variable
    margin: 0 auto;
    padding-left: var(--spacing-medium);
    padding-right: var(--spacing-medium);


    @media (max-width: $breakpoint-md) { 
      flex-wrap: wrap;            // Allow wrapping on smaller screens
    }
  }

  &__branding {
    display: flex;
    align-items: center;

    @media (max-width: $breakpoint-md) { 
      flex-basis: 100%;           // Branding takes full width on smaller screens
      justify-content: center;    // Center the branding
      margin-bottom: var(--spacing-medium); // Add some bottom margin
    }
  }

  &__logo {
    font-size: var(--font-size-h2); // Use responsive font size variable
    font-weight: 700;               // Bold font weight
    color: var(--color-primary);    // Use color variable
    margin: 0;

    a {
      color: inherit; 
      text-decoration: none;
    }

    @media (max-width: $breakpoint-sm) { 
      font-size: 1.5rem;         // Reduce font size on even smaller screens
    }
  }

  .brand-logo {                    // Consider renaming to something more descriptive
    display: flex;
    align-items: center;
    margin-right: var(--spacing-small); // Add some space to the right

    img {
      height: 2.5em;             // Use em for height for better responsiveness
      max-height: calc(var(--font-size-h2) * 2.5); // Limit max-height based on h2 size
      width: auto;               // Let width adjust automatically
      max-width: 100%;           // Prevent image from overflowing its container
      object-fit: contain;       // Maintain aspect ratio and fit within container
    }
  }

  &__nav {
    display: flex;
    align-items: center;

    @media (max-width: $breakpoint-md) { 
      flex-basis: 100%;           // Navigation takes full width on smaller screens
      justify-content: space-between; // Distribute space between menu and toggle
    }
  }

  &__menu {
    display: flex;
    list-style-type: none;        // Remove bullet points
    padding: 0;
    margin: 0;
    align-items: center;

    @media (max-width: $breakpoint-md) { 
      display: none;             // Hide menu by default on smaller screens
      flex-direction: column;    // Stack menu items vertically
      width: 100%;               // Take full width

      &.active {
        display: flex;           // Show menu when active (e.g., on toggle)
      }
    }

    &-item {
      margin-left: var(--spacing-medium); // Space between menu items

      @media (max-width: $breakpoint-md) { 
        margin: var(--spacing-small) 0; // Adjust margins for vertical layout
        width: 100%;
        text-align: center;      // Center text in menu items

        &:last-child {
          margin-top: var(--spacing-medium); // Add extra space after last item
        }
      }
    }

    &-link {
      font-weight: 500;
      padding: var(--spacing-small) var(--spacing-medium); // Use responsive spacing variables
      border-radius: var(--border-radius); 
      color: var(--color-accent); 
      text-decoration: none;
      transition: all var(--transition-speed);
      white-space: nowrap;        // Prevent text from wrapping
      display: inline-block;      // Allow setting width and height
      position: relative;         // For positioning the underline effect

      &::after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 50%;
        width: 0;
        height: 2px;
        background-color: var(--color-primary);
        transition: all var(--transition-speed);
        transform: translateX(-50%); // Center the underline
      }

      &:hover,
      &:focus {
        color: var(--color-primary);

        &::after {
          width: 100%;
          left: -5;
        }
      }

      @media (max-width: $breakpoint-md) { 
        display: block;           // Make links full-width blocks
        padding: var(--spacing-small) 0; // Adjust padding for vertical layout
      }
    }
  }

  .theme-toggle {
    background: none;
    border: 2px solid var(--color-text); 
    cursor: pointer;
    font-size: var(--font-size-base);
    color: var(--color-text);
    border-radius: 50%;
    width: 2em;
    height: 2em;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    margin: 0;
    transition: all var(--transition-speed);

    &:hover,
    &:focus {
      background-color: var(--color-text);
      color: var(--color-background);
      transform: rotate(180deg); 
    }

    @media (max-width: $breakpoint-md) {
      order: 0; // Ensure theme toggle appears first on smaller screens
      margin-left: 0; 
    }
  }

  // Add a menu toggle button for smaller screens (you'll need JS to handle this)
  &__menu-toggle {
    display: none; // Hide by default on larger screens

    @media (max-width: $breakpoint-md) {
      display: inline-block;
      // Add your styles for the menu toggle button here
    }
  }
}

.header__menu-toggle {
  display: none; // Hide by default on larger screens
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  
  @media (max-width: $breakpoint-md) {
    display: block;
    position: relative;
    width: 2em; // Adjust as needed
    height: 1.5em; // Adjust as needed
  }

  &-bar {
    display: block;
    width: 100%;
    height: 3px; // Adjust as needed
    background-color: var(--color-text);
    margin: 0.25em 0; // Adjust as needed
    transition: all var(--transition-speed) ease;

    // Animation for the "X" when the menu is open
    .header.menu-open & {
      &:nth-child(1) {
        transform: translateY(0.5em) rotate(45deg);
      }
      &:nth-child(2) {
        opacity: 0;
      }
      &:nth-child(3) {
        transform: translateY(-0.5em) rotate(-45deg);
      }
    }
  }
}


// 7. Navigation
// -------------



// 8. Hero Section
// ---------------
// Styles for the hero section

.hero {
  text-align: center;
  padding: 10rem 0; // Use rem for top/bottom padding, adjust as needed
  color: var(--color-background);
  background-image: url('/assets/images/LandingCotopaxi.svg');
  background-size: cover;
  background-position: top;
  background-repeat: no-repeat;
  position: relative; // Add this line
  min-height: 100vh; // Add this line
  padding: 0; // Modify this line (remove top/bottom padding)
  display: flex; // Add this line
  flex-direction: column; // Add this line
  justify-content: center; // Add this line
  align-items: center; // Add this line
  padding-top: var(--spacing-xxlarge); // Add this line

  // Add media queries to adjust padding on smaller screens
  @media (max-width: $breakpoint-lg) {
    padding: 4rem 0; 
  }

  @media (max-width: $breakpoint-md) {
    padding: 3rem 0; 
  }

  @media (max-width: $breakpoint-sm) {
    padding: 2rem 0; 
  }

  &__title {
    font-size: var(--font-size-h1);
    font-weight: 700;
    max-width: var(--card-max-width);
    margin-bottom: var(--spacing-medium);
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
    justify-content: center;

    @media (max-width: $breakpoint-md) {
      font-size: 2.5rem; // Adjust h1 size on smaller screens
    }

    @media (max-width: $breakpoint-sm) {
      font-size: 2rem; // Further adjust on even smaller screens
    }
  }

  &__subtitle {
    font-size: var(--font-size-h3);
    font-weight: 300;
    margin-bottom: var(--spacing-large);
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;

    @media (max-width: $breakpoint-lg) {
      max-width: 90%; // Make subtitle take up more width on smaller screens
    }

    @media (max-width: $breakpoint-md) {
      font-size: 1.25rem; // Adjust h3 size on smaller screens
      padding: 0 var(--spacing-medium); // Add padding for better readability
    }
  }
}

// 9. Features & Characters Sections
// ---------------------------------
// Styles for these sections are very similar, so we can combine them
.features,
.characters {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); 
  gap: var(--spacing-large); 
  margin-bottom: var(--spacing-large);

  @media (max-width: $breakpoint-md) {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); // Reduce column size on smaller screens
    gap: var(--spacing-medium); // Reduce gap on smaller screens
  }

  @media (max-width: $breakpoint-sm) {
    grid-template-columns: 1fr; // Single column on very small screens
  }
}

// Styles for both features and characters sections
.features,
.characters {
  display: grid; // Use grid layout for responsive design
  grid-template-columns: repeat(auto-fit, minmax(var(--card-single-max-width), 1fr)); // Create responsive columns
  gap: var(--spacing-large); // Space between grid items
  margin-bottom: var(--spacing-large); // Bottom margin for the entire section

  // Adjust layout for medium-sized screens
  @media (max-width: $breakpoint-md) {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); // Smaller minimum column width
    gap: var(--spacing-medium); // Reduce gap on smaller screens
  }

  // Further adjust layout for small screens
  @media (max-width: $breakpoint-sm) {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); // Even smaller minimum column width
  }
}

// Apply section-card styles to feature and character items
.feature,
.character {
  @extend .section-card; // Inherit styles from .section-card
}

// Additional styles specific to character cards
.character {
  .section-card__image-container {
    border-radius: 50%; // Make image container circular for characters
  }

  img {
    border-radius: 50%; // Make character images circular
  }
}

// Grid layout for feature and character grids
.feature__grid,
.character__grid {
  display: grid; // Use grid layout
  grid-template-columns: repeat(1, minmax(var(--card-single-max-width), 1fr)); // Responsive grid with minimum width
  gap: var(--spacing-large); // Space between grid items
  justify-content: center; // Center grid items horizontally

  // Adjust layout for medium-sized screens
  @media (max-width: $breakpoint-md) {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); // Adjust minimum column width
    gap: var(--spacing-medium); // Reduce gap on smaller screens
  }

  // Further adjust layout for small screens
  @media (max-width: $breakpoint-sm) {
    grid-template-columns: 1fr; // Single column layout on very small screens
  }
}
// 10. Buttons
// -----------
// Styles for buttons
.button-container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;            // Allow buttons to wrap on smaller screens
  gap: var(--spacing-medium);  // Use responsive spacing variable
  margin-top: var(--spacing-large);
}

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: 12.5em;         // Use em for min-width (200px / 16px base font size)
  padding: var(--spacing-small) var(--spacing-large); // Use responsive spacing variables
  border: none;
  border-radius: var(--border-radius);
  background: linear-gradient(45deg, var(--color-primary), var(--color-accent));
  color: var(--color-tertiary);
  text-decoration: none;
  font-weight: 600;
  text-align: center;
  transition: all var(--transition-speed);
  box-shadow: var(--box-shadow);
  text-transform: uppercase;
  letter-spacing: 1px;

  &:hover,
  &:focus {
    background: linear-gradient(45deg, var(--color-accent), var(--color-primary));
    transform: translateY(-2px);
    box-shadow: 0.3em 0.3em 0.4em var(--color-tertiary); // Use em for box-shadow
    color: var(--color-tertiary);
  }

  &--secondary {
    background: linear-gradient(45deg, var(--color-accent), var(--color-primary));

    &:hover,
    &:focus {
      background: linear-gradient(45deg, var(--color-primary), var(--color-accent));
    }
  }

  // Add media queries to adjust button styles on smaller screens if needed
  @media (max-width: $breakpoint-sm) {
    min-width: 10em; // Further reduce min-width on small screens
    font-size: 0.9em; // Slightly reduce font size
  }
}

// Dark theme button styles (No changes needed, already using responsive variables)
[data-theme="dark"] .button {
  // ... 
  &:hover,
  &:focus {
    box-shadow: 0.3em 0.3em 0.4em var(--color-quaternary-dark); // Use em for box-shadow
    color: var(--color-quaternary-dark);
    text-shadow:1px 1px 2px var(--color-tertiary-dark);
  }
}

.cta-button {
  @extend .button;
  text-transform: capitalize;
  font-size: 0.8em;
  border-radius: calc(var(--border-radius) * 1/4);
  min-width: 9.375em; // Use em (150px / 16px base font size)
  padding: var(--spacing-small) var(--spacing-medium); 
  display: flex;
  flex-direction: column; 
  align-items: center;
  justify-content: center;
  text-align: center;
  height: auto;             // Let height adjust based on content
}

.cta-button-title {
  font-weight: bold;
  margin-bottom: 0.2em;
}

.cta-button-subtitle {
  font-size: 0.9em;
}

.personaje__grade-buttons {
  display: flex;
  flex-wrap: wrap;          // Allow buttons to wrap
  justify-content: center;
  gap: var(--spacing-small); // Use responsive spacing variable
}
.personaje {
  &__hero {
    position: relative;
    height: 100vh; // Use vh for responsive height
    min-height: 25em; // Use em for min-height (400px / 16px base font size)
    overflow: hidden;
  }

  &__hero-image {
    width: 100%;
    height: 100%;
    object-fit: cover; // Use 'cover' to ensure the image covers the entire area
  }

  &__hero-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 1.25em; // Use em for padding
  }

  &__title {
    margin: 0;
    font-size: 2.5em;

    @media (max-width: $breakpoint-sm) {
      font-size: 2em; // Adjust font size on smaller screens
    }
  }

  &__role {
    margin: 0;
    font-size: 1.2em;
  }

  &__intro,
  &__content {
    max-width: 800px;
    margin: 2.5em auto; // Use em for margin
    padding: 0 1.25em; // Use em for padding

    @media (max-width: $breakpoint-md) {
      max-width: 90%; // Adjust max-width on smaller screens
    }
  }

  &__quote {
    font-style: italic;
    font-size: 1.2em;
    border-left: 4px solid #FF6600;
    padding-left: 1.25em; // Use em for padding
    margin-left: 0;
  }

  &__related {
    background: color-mix(in srgb, var(--color-tertiary) 90%, transparent);
    padding: 1.25em; // Use em for padding
    border-radius: 5px;
    margin-top: 1.25em; // Use em for margin
  }

  &__footer {
    text-align: center;
    margin-top: 2.5em; // Use em for margin
    padding: 1.25em; // Use em for padding
  }
}

// 12. Subscription Form
// ---------------------
// Styles for the subscription form

.subscription-form-container {
  max-width: 40em; // Use em (640px / 16px base font size)
  margin: 0 auto;
  padding: 1.25em; // Use em for padding

  iframe {
    width: 100%;
    max-width: 40em; // Use em
    // min-height: 50em; // Consider removing or adjusting min-height for better responsiveness
    border: none;
    transition: height 0.3s ease;
  }

  // Add media queries to adjust styles on smaller screens if needed
  @media (max-width: $breakpoint-md) {
    max-width: 90%; // Make the container take up most of the screen width on smaller screens
    padding: 1em;   // Reduce padding on smaller screens
  }
}

.loading {
  text-align: center;
  padding: 1.25em; // Use em for padding
  font-style: italic;
}

// 13. Footer
// ----------
// Styles for the site footer

.footer {
  background-color: var(--color-tertiary); // Or any suitable background color
  color: var(--color-text); // Adjust text color for contrast
  padding: 2em 0; // Use em for padding
  text-align: center; // Center the content
  border-top: solid 1px var(--color-tertiary);
  border-top-left-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);

  &__content {
    max-width: 40em; // Adjust as needed
    margin: 0 auto; 
  }

  &__links {
    list-style: none;
    padding: 0;
    margin: 1em 0; // Adjust spacing as needed
    display: flex; 
    justify-content: center; 
    flex-wrap: wrap; // Allow links to wrap on smaller screens
    gap: 1.5em;     // Adjust spacing between links as needed
  }

  &__link {
    color: var(--color-text); // Inherit color from parent
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease; // Add smooth transition on hover

    &:hover {
      color: var(--color-accent); // Or any suitable hover color
    }
  }

  &__copyright {
    font-size: 0.9em;
    color: var(--color-text); // Adjust color for contrast if needed
  }

  // Add media queries for responsiveness if needed
  @media (max-width: $breakpoint-sm) {
    padding: 1.5em 0; // Reduce padding on smaller screens

    &__links {
      gap: 1em; // Reduce gap between links on smaller screens
    }
  }
}


// 14. Utilities
// -------------
// Utility classes for general use

// 14. Utilities
// -------------
// Utility classes for general use

// Text alignment
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}

// Responsive margins (top, right, bottom, left)
.m-xs { margin: var(--spacing-unit); }
.m-sm { margin: var(--spacing-small); }
.m-md { margin: var(--spacing-medium); }
.m-lg { margin: var(--spacing-large); }
.m-xl { margin: var(--spacing-xlarge); }

.mt-xs { margin-top: var(--spacing-unit); }
.mt-sm { margin-top: var(--spacing-small); }
.mt-md { margin-top: var(--spacing-medium); }
.mt-lg { margin-top: var(--spacing-large); }
.mt-xl { margin-top: var(--spacing-xlarge); }

.mr-xs { margin-right: var(--spacing-unit); }
.mr-sm { margin-right: var(--spacing-small); }
.mr-md { margin-right: var(--spacing-medium); }
.mr-lg { margin-right: var(--spacing-large); }
.mr-xl { margin-right: var(--spacing-xlarge); }

.mb-xs { margin-bottom: var(--spacing-unit); }
.mb-sm { margin-bottom: var(--spacing-small); }
.mb-md { margin-bottom: var(--spacing-medium); }
.mb-lg { margin-bottom: var(--spacing-large); }
.mb-xl { margin-bottom: var(--spacing-xlarge); }

.ml-xs { margin-left: var(--spacing-unit); }
.ml-sm { margin-left: var(--spacing-small); }
.ml-md { margin-left: var(--spacing-medium); }
.ml-lg { margin-left: var(--spacing-large); }
.ml-xl { margin-left: var(--spacing-xlarge); }

// Responsive padding (top, right, bottom, left)
.p-xs { padding: var(--spacing-unit); }
.p-sm { padding: var(--spacing-small); }
.p-md { padding: var(--spacing-medium); }
.p-lg { padding: var(--spacing-large); }
.p-xl { padding: var(--spacing-xlarge); }

.pt-xs { padding-top: var(--spacing-unit); }
.pt-sm { padding-top: var(--spacing-small); }
.pt-md { padding-top: var(--spacing-medium); }
.pt-lg { padding-top: var(--spacing-large); }
.pt-xl { padding-top: var(--spacing-xlarge); }

.pr-xs { padding-right: var(--spacing-unit); }
.pr-sm { padding-right: var(--spacing-small); }
.pr-md { padding-right: var(--spacing-medium); }
.pr-lg { padding-right: var(--spacing-large); }
.pr-xl { padding-right: var(--spacing-xlarge); }

.pb-xs { padding-bottom: var(--spacing-unit); }
.pb-sm { padding-bottom: var(--spacing-small); }
.pb-md { padding-bottom: var(--spacing-medium); }
.pb-lg { padding-bottom: var(--spacing-large); }
.pb-xl { padding-bottom: var(--spacing-xlarge); }

.pl-xs { padding-left: var(--spacing-unit); }
.pl-sm { padding-left: var(--spacing-small); }
.pl-md { padding-left: var(--spacing-medium); }
.pl-lg { padding-left: var(--spacing-large); }
.pl-xl { padding-left: var(--spacing-xlarge); }

// Additional utility classes can be added as needed for other properties
// such as display, font-size, etc.
// 15. Accessibility classes
// --------------------------
// 15. Accessibility classes
// --------------------------

.visually-hidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px); // For older browsers
  clip-path: inset(50%);        // Modern approach
  white-space: nowrap;
}

.skip-link {
  position: absolute;
  top: -40px; // Initially hidden off-screen
  left: 0;
  background: var(--color-primary);
  color: white;
  padding: 0.5em; // Use em for padding
  z-index: 100;  // Ensure it's on top when focused

  &:focus {
    top: 0;      // Bring it into view when focused
  }
}
// 14. Utilities
// -------------
// Utility classes for general use

// Text alignment
.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

// Responsive margins (top, right, bottom, left)
@each $breakpoint in (xs, sm, md, lg, xl) {
  .m-#{$breakpoint} { margin: var(--spacing-#{$breakpoint}); }
  .mt-#{$breakpoint} { margin-top: var(--spacing-#{$breakpoint}); }
  .mr-#{$breakpoint} { margin-right: var(--spacing-#{$breakpoint}); }
  .mb-#{$breakpoint} { margin-bottom: var(--spacing-#{$breakpoint}); }
  .ml-#{$breakpoint} { margin-left: var(--spacing-#{$breakpoint}); }
}

// Responsive padding (top, right, bottom, left)
@each $breakpoint in (xs, sm, md, lg, xl) {
  .p-#{$breakpoint} { padding: var(--spacing-#{$breakpoint}); }
  .pt-#{$breakpoint} { padding-top: var(--spacing-#{$breakpoint}); }
  .pr-#{$breakpoint} { padding-right: var(--spacing-#{$breakpoint}); }
  .pb-#{$breakpoint} { padding-bottom: var(--spacing-#{$breakpoint}); }
  .pl-#{$breakpoint} { padding-left: var(--spacing-#{$breakpoint}); }
}

// Responsive font sizes
.fs-sm {
  font-size: 0.875em;
}

.fs-base {
  font-size: 1em;
}

.fs-lg {
  font-size: 1.25em;
}

.fs-xl {
  font-size: 1.5em;
}

// Responsive display properties
.d-none {
  display: none;
}

.d-inline {
  display: inline;
}

.d-inline-block {
  display: inline-block;
}

.d-block {
  display: block;
}

.d-flex {
  display: flex;
}

.d-grid {
  display: grid;
}

// Add more responsive display classes for specific breakpoints if needed
@each $breakpoint in (sm, md, lg, xl) {
  .d-none-#{$breakpoint} {
    @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
      display: none;
    }
  }

  .d-inline-#{$breakpoint} {
    @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
      display: inline;
    }
  }

  .d-inline-block-#{$breakpoint} {
    @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
      display: inline-block;
    }
  }

  .d-block-#{$breakpoint} {
    @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
      display: block;
    }
  }

  .d-flex-#{$breakpoint} {
    @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
      display: flex;
    }
  }

  .d-grid-#{$breakpoint} {
    @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
      display: grid;
    }
  }
}

// Responsive widths
.w-25 {
  width: 25%;
}

.w-50 {
  width: 50%;
}

.w-75 {
  width: 75%;
}

.w-100 {
  width: 100%;
}

// Responsive max-widths
.mw-25 {
  max-width: 25%;
}

.mw-50 {
  max-width: 50%;
}

.mw-75 {
  max-width: 75%;
}

.mw-100 {
  max-width: 100%;
}

// ... Add more utility classes as needed
// 16. Animations
// --------------
// Animation styles
// 16. Animations
// --------------
// Animation styles

.background-animation {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1; 
  opacity: 0.15;
  background: linear-gradient(
    45deg,
    var(--color-primary),
    var(--color-secondary),
    var(--color-accent),
    var(--color-tertiary),
    var(--color-quaternary)
  );
  background-size: 300% 300%; 
  animation: gradientBG 180s ease infinite;

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    opacity: 0.5;
    animation: patternMove 40s linear infinite;
  }

  // Add media query to potentially disable or adjust animation on smaller screens
  @media (prefers-reduced-motion: reduce) { 
    // For users who prefer reduced motion, consider disabling the animation entirely
    animation: none;

    &::after {
      animation: none;
    }
  }

  @media (max-width: $breakpoint-sm) {
    // You could adjust opacity or animation speed here for smaller screens if needed
  }
}

@keyframes gradientBG {
  0% {
    background-position: 0% 50%;
  }
  50% { 
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes patternMove {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(6.25em, 6.25em); // Use em for responsiveness (100px / 16px)
  }

  // Optional: Media query for slower animation on smaller screens
  @media (max-width: $breakpoint-sm) {
    0% {
      transform: translate(0, 0);
    }
    100% {
      transform: translate(3.125em, 3.125em); // Reduce movement on small screens
    }
  }
}
// 17. Media Queries
// -----------------
// Responsive design adjustments

// 17. Media Queries
// -----------------
// Responsive design adjustments

// Medium screens and below
@media (max-width: $breakpoint-md) {
  .header {
    &::before {
      opacity: 1; 
    }

    .container {
      flex-wrap: wrap; 
    }

    &__branding {
      flex-basis: 100%;
      justify-content: center;
      margin-bottom: var(--spacing-small); 
    }

    &__nav {
      flex-basis: 100%;
      justify-content: space-between; 
    }

    &__menu {
      display: none; 
      flex-direction: column;
      width: 100%;

      &.active {
        display: flex; 
      }

      &-item {
        margin: var(--spacing-small) 0; 
        width: 100%;
        text-align: center;
      }

      &-item:last-child {
        margin-top: var(--spacing-medium); 
      }

      &-link {
        display: block; 
        padding: var(--spacing-small) 0; 
      }
    }

    &__menu-toggle {
      display: inline-block; 
    }

    .theme-toggle {
      order: 0; 
      margin-left: 0;
    }
  }

  .hero {
    &__title {
      font-size: calc(var(--font-size-h1) * 0.8); 
    }

    &__subtitle {
      font-size: calc(var(--font-size-h3) * 0.9); 
    }
  }

  .features__description {
    font-size: var(--font-size-small);
    padding: 0 var(--spacing-medium);
  }

  .subscription-form-container iframe {
    // min-height: 1000px; // Consider removing or adjusting this for better responsiveness
  }
}

// Small screens and below 
@media (max-width: $breakpoint-sm) { 
  // Add more specific styles for smaller screens if needed

  .hero {
    &__title {
      font-size: calc(var(--font-size-h1) * 0.6); // Further reduce title size 
    }

    &__subtitle {
      font-size: calc(var(--font-size-h3) * 0.7); // Further reduce subtitle size
    }
  }

  .section-card { 
    img {
      max-width: 10em; // Reduce image size on very small screens
    }
  }
}

// The @media (max-width: 600px) block seems redundant 
// as it targets the same breakpoint as $breakpoint-sm. 
// You can remove it or adjust it to target a different breakpoint if needed.

// 18. Print Styles
// ----------------
// Styles for print layout
// 18. Print Styles
// ----------------
// Styles for print layout

@media print {
  // Hide elements not suitable for printing
  .background-animation,
  .header__menu,
  .theme-toggle,
  .button {
    display: none !important; // Use !important to override any potential inline styles
  }

  // General body styles
  body {
    font-size: 12pt; // Standard font size for print
    line-height: 1.5; // Comfortable line height for readability
  }

  // Link styles
  a {
    text-decoration: underline; // Make links visually distinct
    color: black;               // Ensure links are visible on printed pages
  }

  // Heading styles
  h1,
  h2,
  h3 {
    page-break-after: avoid; // Prevent headings from being split across pages
  }

  // Image styles
  img {
    max-width: 100% !important; // Ensure images fit within the page width
  }

  // Page margins
  @page {
    margin: 2cm; // Set reasonable margins for the printed page
  }
}

// AI Model Selector Styles
.selector-container {
    position: relative;
    width: 650px;
    background-color: var(--color-tertiary);
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    overflow: hidden;
    padding: var(--spacing-unit);
    margin: var(--spacing-large) auto;
    color: var(--color-primary);
    text-align: center;
}

.selector-grid {
    display: grid;
    gap: var(--spacing-small);
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    grid-auto-rows: 120px;
}

.option {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: var(--font-size-base);
    font-weight: bold;
    color: var(--color-tertiary);
    background-color: var(--color-quaternary);
    border-radius: var(--border-radius);
    transition: all var(--transition-speed);
    box-shadow: inset 0 0 10px rgba(0,0,0,0.1);
    cursor: pointer;
    padding: var(--spacing-medium);
    text-align: center;
    word-break: break-word;

    &.selected {
        color: var(--color-background);
        background-color: var(--color-primary);
        font-size: calc(var(--font-size-base) * 1.1);
        box-shadow: var(--box-shadow);
        transform: scale(1.05);
        z-index: 10;
    }

    &:hover {
        transform: translateY(-2px);
        box-shadow: var(--box-shadow);
    }
}

@media (max-width: $breakpoint-sm) {
    .selector-container {
        width: 90%;
    }
    .selector-grid {
        grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
        grid-auto-rows: 100px;
    }
}